<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cts.eas.ipm</groupId>
	<artifactId>os-fis-ws-demo</artifactId>
	<version>1.0.1-RELEASE</version>
	<name>Openshift FIS Webservice Demo</name>
	<url>http://www.cognizant.com/</url>
	<inceptionYear>2016</inceptionYear>
	<developers>
		<developer>
			<id>449030</id>
			<name>Ravishankar</name>
			<email>Ravishankar.SadagopanHassain@cognizant.com</email>
			<organization>Cognizant Technology Solutions</organization>
			<organizationUrl>http://www.cognizant.com/</organizationUrl>
			<roles>
				<role>Developer</role>
				<role>Associate - Projects, EAS-IPM</role>
			</roles>
			<timezone>+5:30 IST</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven-resources-plugin.encoding>UTF-8</maven-resources-plugin.encoding>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<maven-compiler-plugin.source>1.8</maven-compiler-plugin.source>
		<maven-compiler-plugin.target>1.8</maven-compiler-plugin.target>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<fuse.version>6.2.1.redhat-084</fuse.version>
		<fabric8.version>2.2.0.redhat-079</fabric8.version>
		<maven-bundle-plugin.version>2.3.7</maven-bundle-plugin.version>
		<docker.maven.plugin.version>0.13.6</docker.maven.plugin.version>
		<docker.from>jboss-fuse-6/fis-java-openshift:1.0</docker.from>
		<docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>
		<docker.port.container.soap>8080</docker.port.container.soap>
		<fabric8.iconRef>camel</fabric8.iconRef>
		<fabric8.label.component>${project.artifactId}</fabric8.label.component>
		<fabric8.label.container>java</fabric8.label.container>
		<fabric8.label.container>camel</fabric8.label.container>
		<fabric8.label.container>spring</fabric8.label.container>
		<fabric8.label.group>demo</fabric8.label.group>
		<fabric8.label.group>fis</fabric8.label.group>
		<fabric8.dockerUser>${project.groupId}/</fabric8.dockerUser>
		<fabric8.service.name>${project.artifactId}</fabric8.service.name>
		<fabric8.service.port>80</fabric8.service.port>
		<fabric8.service.containerPort>8080</fabric8.service.containerPort>
		<fabric8.service.type>LoadBalancer</fabric8.service.type>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-with-platform-deps</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.fuse.bom</groupId>
				<artifactId>jboss-fuse-parent</artifactId>
				<version>${fuse.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>fuse-releases</id>
			<name>JBoss Fuse Release Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/fs-releases/</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>public jboss</id>
			<name>JBoss Release Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>redhat-techpreview-all-repository</id>
			<name>Redhat Tech Preview Repository</name>
			<url>https://maven.repository.redhat.com/techpreview/all/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>fuse-releases</id>
			<name>JBoss Fuse Release Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/fs-releases/</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>public jboss</id>
			<name>JBoss Release Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>redhat-techpreview-all-repository</id>
			<name>Redhat Tech Preview Repository</name>
			<url>https://maven.repository.redhat.com/techpreview/all/</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<defaultGoal>clean install</defaultGoal>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven-compiler-plugin.source}</source>
					<target>${maven-compiler-plugin.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${maven-resources-plugin.encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>json</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>json</goal>
						</goals>
					</execution>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>hawt-app-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>hawt-app</id>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<javaMainClass>org.apache.camel.spring.Main</javaMainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/deployments</basedir>
									<user>jboss:jboss:jboss</user>
									<descriptorRef>hawt-app</descriptorRef>
									<mode>tar</mode>
									<inline>
										<fileSet>
											<directory>${project.build.directory}/hawt-app/bin</directory>
											<outputDirectory>/bin</outputDirectory>
											<includes>
												<include>*</include>
											</includes>
											<fileMode>0755</fileMode>
										</fileSet>
										<fileSet>
											<directory>${project.build.directory}/hawt-app/lib</directory>
											<outputDirectory>/lib</outputDirectory>
											<includes>
												<include>*</include>
											</includes>
											<fileMode>0755</fileMode>
										</fileSet>
									</inline>
								</assembly>
								<env>
									<JAVA_LIB_DIR>/deployments/lib</JAVA_LIB_DIR>
									<JAVA_MAIN_CLASS>org.apache.camel.spring.Main</JAVA_MAIN_CLASS>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.fabric8</groupId>
										<artifactId>
											fabric8-maven-plugin
										</artifactId>
										<versionRange>
											[2.2.0.redhat-079,)
										</versionRange>
										<goals>
											<goal>json</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>build</id>
			<build>
				<defaultGoal>clean install</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>deploy</id>
			<build>
				<defaultGoal>docker:build fabric8:apply</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-build</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-deploy</id>
			<properties>
				<fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
			<build>
				<defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-local-deploy</id>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
			<build>
				<defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
	</profiles>
</project>
